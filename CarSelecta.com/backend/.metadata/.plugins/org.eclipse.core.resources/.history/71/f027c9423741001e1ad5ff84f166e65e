package org.program.service;

import java.util.Base64;

import org.program.entity.User;
import org.program.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
//import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

@Service
public class UserService {

	@Autowired
	private UserRepository userRepository;

//	  @Autowired
//	  private BCryptPasswordEncoder passwordEncoder;

	public void userSignupService(User user) {
//		user.setCreatePassword(passwordEncoder.encode(user.getCreatePassword()));
		byte[] password = Base64.getEncoder().encode(user.getPassword().getBytes());
		user.setPassword(new String(password));
		userRepository.save(user);

	}

	public int userLoginService(User user) {

		User user1 = userRepository.findByEmail(user.getEmail());

		if (user1 != null) {
			byte[] dPassword = Base64.getDecoder().decode(user1.getPassword());
			String password = new String(dPassword);
			if (password.equals(user.getPassword()))
				return 200;
			else
				return 500;
		}
		return 500;
	}

//	public User getUserDetailsService(String email) {
//		
//		return userRepository.findByEmail(email);
//	}
}
